{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.less","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/form-validation/form-validation.component.html","./src/app/form-validation/form-validation.component.less","./src/app/form-validation/form-validation.component.ts","./src/app/json-table/json-table.component.html","./src/app/json-table/json-table.component.less","./src/app/json-table/json-table.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"main-header\\\">\\n  <div class=\\\"main-header-nav\\\">\\n    <button mat-raised-button type=\\\"button\\\" class=\\\"main-header-nav-jsonTable\\\" (click)=\\\"activePage = ''\\\">\\n      <mat-icon>home</mat-icon>\\n      <span>Home</span>\\n    </button>\\n    <button mat-raised-button type=\\\"button\\\" class=\\\"main-header-nav-jsonTable\\\" (click)=\\\"activePage = 'jsonTable'\\\">\\n      <mat-icon>list</mat-icon>\\n      <span>Sort table demo</span>\\n    </button>\\n    <button mat-raised-button type=\\\"button\\\" class=\\\"main-header-nav-formValidation\\\" (click)=\\\"activePage = 'formValidation'\\\">\\n      <mat-icon>done_all</mat-icon>\\n      <span>Form validation demo</span>\\n    </button>\\n  </div>\\n</div>\\n<div class=\\\"main-container\\\">\\n\\n\\n  <div class=\\\"main-default-content\\\" *ngIf=\\\"activePage == ''\\\">\\n    <span class=\\\"main-welcome-text\\\">Welcome</span>\\n    <span class=\\\"main-about-text\\\">This app is my solution to your challenge</span>\\n  </div>\\n\\n\\n  <app-json-table *ngIf=\\\"activePage == 'jsonTable'\\\"></app-json-table>\\n  \\n  <app-form-validation *ngIf=\\\"activePage == 'formValidation'\\\"></app-form-validation>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \".main-header {\\n  background: #3d5afe;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 50px;\\n  z-index: 9999;\\n}\\n.main-header .main-header-nav {\\n  margin: 8px auto;\\n  display: block;\\n  width: 465px;\\n}\\n.main-container {\\n  float: left;\\n  width: 100%;\\n  height: calc(100% - 50px);\\n  margin-top: 50px;\\n  overflow: auto;\\n}\\n.main-container .main-default-content {\\n  margin: 10% auto;\\n  width: 400px;\\n  height: 300px;\\n  padding: 15px;\\n  -webkit-box-shadow: 0 0 10px #00000042;\\n          box-shadow: 0 0 10px #00000042;\\n  background: white;\\n}\\n.main-container .main-default-content .main-welcome-text,\\n.main-container .main-default-content .main-about-text {\\n  float: left;\\n  width: 100%;\\n  color: #3d5afe;\\n  font-size: 40px;\\n  text-align: center;\\n}\\n.main-container .main-default-content .main-about-text {\\n  font-size: 20px;\\n  margin-top: 100px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.less\n// module id = ./src/app/app.component.less\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  activePage: string = \"\"\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule,HttpClient } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatNativeDateModule,MatDatepickerModule,MatFormFieldModule,MatSortModule,MatChipsModule,MatInputModule,MatSelectModule,MatTooltipModule,MatSnackBarModule,MatTabsModule,MatSidenavModule,MatIconModule,MatButtonModule } from '@angular/material';\nimport { JsonTableComponent } from './json-table/json-table.component';\nimport { FormValidationComponent } from './form-validation/form-validation.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JsonTableComponent,\n    FormValidationComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatTabsModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatInputModule,\n    MatChipsModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<form class=\\\"formValidation-form\\\" [formGroup]=\\\"formValidation\\\" >\\n  <mat-form-field class=\\\"formValidation-form-field\\\">\\n    <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"formEmail\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error *ngIf=\\\"formValidation.get('email').hasError('email') && !formValidation.get('email').hasError('required')\\\">\\n      Please enter a valid email address\\n    </mat-error>\\n    <mat-error *ngIf=\\\"formValidation.get('email').hasError('required')\\\">\\n      Email is\\n      <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"formValidation-form-field\\\">\\n    <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"formPassword\\\" formControlName=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-hint>Passwords must match, atleast 8 charactes long</mat-hint>\\n    <mat-error *ngIf=\\\"formValidation.get('password').hasError('passwordMismatch') && !formValidation.get('password').hasError('required')  && !formValidation.get('passwordConfirm').hasError('required')\\\">\\n        Passwords are different\\n      </mat-error>\\n      <mat-error *ngIf=\\\"formValidation.get('password').hasError('passwordShort') && !formValidation.get('password').hasError('required')\\\">\\n          Password is to short\\n      </mat-error>\\n    <mat-error *ngIf=\\\"formValidation.get('password').hasError('required')\\\">\\n      Password is\\n      <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"formValidation-form-field\\\">\\n    <input matInput type=\\\"password\\\" placeholder=\\\"Password confirm\\\" [(ngModel)]=\\\"formPasswordConfirm\\\" formControlName=\\\"passwordConfirm\\\" [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-hint>Passwords must match, atleast 8 charactes long</mat-hint>\\n    <mat-error *ngIf=\\\"formValidation.get('passwordConfirm').hasError('passwordMismatch') && !formValidation.get('passwordConfirm').hasError('required')  && !formValidation.get('password').hasError('required')\\\">\\n        Passwords are different\\n      </mat-error>\\n      <mat-error *ngIf=\\\"formValidation.get('passwordConfirm').hasError('passwordShort') && !formValidation.get('passwordConfirm').hasError('required')\\\">\\n          Password is to short\\n      </mat-error>\\n    <mat-error *ngIf=\\\"formValidation.get('passwordConfirm').hasError('required')\\\">\\n      Password is\\n      <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <button mat-raised-button type=\\\"button\\\" [disabled]=\\\"!(this.formValidation.status == 'VALID')\\\" class=\\\"formValidation-form-confirm\\\" (click)=\\\"confirmValidation()\\\">\\n      <mat-icon>send</mat-icon>\\n      <span>Send</span>\\n    </button>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/form-validation/form-validation.component.html\n// module id = ./src/app/form-validation/form-validation.component.html\n// module chunks = main","module.exports = \".formValidation-form {\\n  margin: 10% auto;\\n  width: 400px;\\n  height: 300px;\\n  padding: 15px;\\n  -webkit-box-shadow: 0 0 10px #00000042;\\n          box-shadow: 0 0 10px #00000042;\\n  background: white;\\n  position: relative;\\n}\\n.formValidation-form .formValidation-form-field {\\n  float: left;\\n  margin-top: 17px;\\n  width: 100%;\\n}\\n.formValidation-form .formValidation-form-confirm {\\n  position: absolute;\\n  bottom: 5px;\\n  right: 5px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/form-validation/form-validation.component.less\n// module id = ./src/app/form-validation/form-validation.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl,FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\n//triggers the events\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-form-validation',\n  templateUrl: './form-validation.component.html',\n  styleUrls: ['./form-validation.component.less']\n})\nexport class FormValidationComponent {\n\n  formEmail:string = ''\n  formPassword:string = ''\n  formPasswordConfirm:string = ''\n\n  constructor() {}\n\n  //defining group of validators for form fields\n  formValidation = new FormGroup({\n    //validation of email field\n    'email' :new FormControl(null, [\n      Validators.required,\n      Validators.email,\n    ]),\n    //validation of password and confirm\n    'password' :new FormControl(null, [\n      Validators.required,\n      CustomValidators.passwordsMatch(this).bind(this), //custom validation \n      CustomValidators.passwordLength().bind(this) //custom validation \n    ]),\n    'passwordConfirm' :new FormControl(null, [\n      Validators.required,\n      CustomValidators.passwordsMatch(this).bind(this), //custom validation \n      CustomValidators.passwordLength().bind(this) //custom validation \n    ])\n       \n  })\n  matcher = new MyErrorStateMatcher(); //init of the events , up\n\n  //event after form confirm\n  //just example\n  confirmValidation() {\n    alert(\"Stealing your creditials...\")\n  }\n\n}\n\n\n//custo validators for passwords\nexport class CustomValidators {\n\n  //passing form and chechcking if passwords match \n  public static passwordsMatch(form:object) {\n    return (control: FormControl): { [s: string]: boolean } => {\n      if (form['formPassword'] !== form['formPasswordConfirm']) {\n        return { 'passwordMismatch': true } //err if not\n      } else {\n        return null;\n      }\n    }\n  }\n  //password length control\n  public static passwordLength() {\n    return (control: FormControl): { [s: string]: boolean } => {\n      if(control.value == null){\n        return null\n      }\n     if (control.value.length < 8) {\n        return { 'passwordShort': true } //err if not\n      } else {\n        return null;\n      }\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/form-validation/form-validation.component.ts","module.exports = \"<div class=\\\"jsonTable-date-filter\\\">\\n  <div class=\\\"jsonTable-date-filter-wrapper\\\">\\n  <mat-form-field class=\\\"jsonTable-date-from\\\">\\n    <input matInput [(ngModel)]=\\\"filterDateFrom\\\" [matDatepicker]=\\\"pickerFrom\\\" placeholder=\\\"Choose start date\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"pickerFrom\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #pickerFrom></mat-datepicker>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"jsonTable-date-to\\\">\\n    <input matInput [(ngModel)]=\\\"filterDateTo\\\" [matDatepicker]=\\\"pickerTo \\\" placeholder=\\\"Choose end date\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"pickerTo\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #pickerTo></mat-datepicker>\\n  </mat-form-field>\\n  <button mat-raised-button type=\\\"button\\\" class=\\\"jsonTable-date-startFilter\\\" (click)=\\\"filterTable()\\\">\\n      <mat-icon>schedule</mat-icon>\\n      <span>Filter</span>\\n  </button>\\n  <button mat-icon-button type=\\\"button\\\" class=\\\"jsonTable-date-clearFilter\\\" *ngIf=\\\"activeFilter\\\" (click)=\\\"unfilterTable()\\\">\\n      <mat-icon>clear</mat-icon>\\n  </button>\\n</div>\\n</div>\\n<div class=\\\"jsonTable-data-container\\\">\\n  <table matSort (matSortChange)=\\\"sortData($event)\\\">\\n    <tr>\\n      <th mat-sort-header=\\\"city\\\">City</th>\\n      <th mat-sort-header=\\\"start_date\\\">Start date</th>\\n      <th mat-sort-header=\\\"end_date\\\">End date</th>\\n      <th mat-sort-header=\\\"price\\\">Price</th>\\n      <th mat-sort-header=\\\"status\\\">Status</th>\\n      <th mat-sort-header=\\\"color\\\">Color</th>\\n    </tr>\\n\\n    <tr *ngFor=\\\"let city of jsonData\\\">\\n      <td>{{city.city}}</td>\\n      <td>{{city.start_date}}</td>\\n      <td>{{city.end_date}}</td>\\n      <td>{{city.price}}</td>\\n      <td>{{city.status}}</td>\\n      <td>{{city.color}}</td>\\n    </tr>\\n  </table>\\n</div>\\n<button mat-raised-button type=\\\"button\\\" class=\\\"jsonTable-nav-loadmore\\\" *ngIf=\\\"isNextPage() && !activeFilter\\\" (click)=\\\"addJsonPage()\\\">\\n  <mat-icon>cached</mat-icon>\\n  <span>Load more...</span>\\n</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/json-table/json-table.component.html\n// module id = ./src/app/json-table/json-table.component.html\n// module chunks = main","module.exports = \".jsonTable-data-container,\\n.jsonTable-date-filter {\\n  width: 50%;\\n  margin: 0 auto;\\n  padding: 10px;\\n  -webkit-box-shadow: 0 0 10px #00000042;\\n          box-shadow: 0 0 10px #00000042;\\n  background: white;\\n  margin-top: 8px;\\n  margin-bottom: 10px;\\n  overflow: auto;\\n  min-width: 500px;\\n}\\n.jsonTable-date-filter-wrapper {\\n  margin: 0 auto;\\n  display: block;\\n}\\n.jsonTable-data-container {\\n  height: calc(100% - 160px);\\n}\\n.jsonTable-data-container table {\\n  float: left;\\n  width: 100%;\\n}\\n.jsonTable-date-filter {\\n  height: 50px;\\n  width: 555px;\\n  overflow: hidden;\\n}\\n.jsonTable-nav-loadmore {\\n  margin: 0 auto;\\n  display: block;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/json-table/json-table.component.less\n// module id = ./src/app/json-table/json-table.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Sort } from '@angular/material';\n\n//intercae of data structure from json\nexport interface City {\n  id: number,\n  city: string,\n  start_date: string,\n  end_date: string,\n  price: string,\n  status: string,\n  color: string\n}\n\n@Component({\n  selector: 'app-json-table',\n  templateUrl: './json-table.component.html',\n  styleUrls: ['./json-table.component.less']\n})\nexport class JsonTableComponent implements OnInit{\n\n  jsonData: Array<City> = [];\n  origData: Array<City> = [];\n  fullData: Array<City> = [];\n  lastSort: Sort;\n\n  filterDateFrom: string = \"\";\n  filterDateTo: string = \"\";\n  activeFilter: Boolean = false;\n\n  activePage: number = 1;\n  pageSize: number = 50;\n\n  constructor(private http: HttpClient) {}\n  //init of class\n  ngOnInit(){\n    this.getJSON().subscribe(data => {\n      this.jsonData, this.origData = data.slice(0,this.pageSize);\n      this.fullData = data;\n      this.initSortHeader()\n    });\n  }\n  //disable the date filter \n  unfilterTable(){\n    this.activeFilter = false;\n    this.activePage = 1;\n    this.ngOnInit();\n  }\n  //control of date fitler\n  filterTable(){\n    let date_from = new Date(this.filterDateFrom);\n    let date_to = new Date(this.filterDateTo);\n    //filter determing the date \n    var filtered = this.fullData.filter((city: object)=>{\n      var start = new Date(city['start_date']);\n      var end = new Date(city['end_date']);\n      //dates compare\n      return (date_from < start && end < date_to);\n    });\n    this.activePage = 1;\n    this.jsonData = filtered;\n    this.activeFilter = true;\n  }\n  //request for json data\n  getJSON(): Observable<any> {\n    return this.http.get(\"./assets/data/data.json\");\n  }\n  //control if next page is avaiable\n  isNextPage(): Boolean{\n    return (this.activePage * this.pageSize) < this.fullData.length;\n  }\n  //loading nect page of results\n  addJsonPage(){\n    this.activePage++;\n    this.jsonData, this.origData = this.fullData.slice(0,this.activePage*this.pageSize);\n    this.initSortHeader()\n  }\n  //reinitalization of material sorted header\n  initSortHeader(){\n    let defSort: Sort = {active:\"\",direction:\"\"};\n    if(this.lastSort){\n      defSort = this.lastSort;\n    }\n    this.sortData(defSort);\n  }\n  //sort data function for material sorted header\n  sortData(sort: Sort) {\n    this.lastSort = sort;\n    let data = this.origData.slice();\n    if(this.activeFilter){\n      data = this.jsonData;\n    }\n    if ((!sort.active || sort.direction === '')) {\n      this.jsonData = data;\n      return;\n    }\n    //sorting data with right filter\n    this.jsonData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'city': return this.compare(a.city, b.city, isAsc);\n        case 'start_date': return this.compareDate(a.start_date,b.start_date,isAsc);\n        case 'end_date': return  this.compareDate(a.end_date,b.end_date,isAsc);\n        case 'price': return this.compare(a.price, b.price, isAsc);\n        case 'status': return this.compare(a.status, b.status, isAsc);\n        case 'color': return this.compare(a.color, b.color, isAsc);\n        default: return 0;\n      }\n    });\n  }\n  //compare as string\n  compare(a, b, isAsc) {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n  //compare as date\n  compareDate(a,b,isAsc){\n    return (new Date(a) < new Date(b)? -1 : 1) * (isAsc ? 1 : -1);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/json-table/json-table.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}